// Add this at the beginning of your callback handler
console.log('Full URL:', window.location.href);
console.log('Search params:', window.location.search);
console.log('Hash:', window.location.hash);
console.log('Stored state:', sessionStorage.getItem('oauth_state'));

// Get parameters from both search and hash
const getParams = () => {
  const searchParams = new URLSearchParams(window.location.search);
  const hashParams = new URLSearchParams(window.location.hash.replace('#', ''));
  
  // Check both locations for the state parameter
  const state = searchParams.get('state') || hashParams.get('state');
  return { state };
};

const { state } = getParams();
const storedState = sessionStorage.getItem('oauth_state');

if (!state || state !== storedState) {
  console.error('OAuth state mismatch', { 
    state, 
    storedState,
    fullUrl: window.location.href,
    searchParams: window.location.search,
    hash: window.location.hash
  });
  
  // Provide user feedback
  // Redirect to an error page or show an error message
  window.location.href = '/auth-error?reason=state_mismatch';
} else {
  try {
    // Continue with authentication flow
    sessionStorage.removeItem('oauth_state');
    // Process the token or code
  } catch (error) {
    console.error('Error processing authentication:', error);
    window.location.href = '/auth-error?reason=processing_error';
  }
} 